!function e(r,n,o){function t(i,a){if(!n[i]){if(!r[i]){var m="function"==typeof require&&require;if(!a&&m)return m(i,!0);if(s)return s(i,!0);var u=new Error("Cannot find module '"+i+"'");throw u.code="MODULE_NOT_FOUND",u}var c=n[i]={exports:{}};r[i][0].call(c.exports,function(e){var n=r[i][1][e];return t(n?n:e)},c,c.exports,e,r,n,o)}return n[i].exports}for(var s="function"==typeof require&&require,i=0;i<o.length;i++)t(o[i]);return t}({1:[function(e,r,n){var o=e("./lib/parse").all,t=e("./lib/units"),s=e("./lib/rewrite");r.exports=function(e,r,n){return"number"==typeof e?e:o(s(e,n),r||t)},r.exports.units=t},{"./lib/parse":2,"./lib/rewrite":3,"./lib/units":4}],2:[function(e,r,n){function o(e,r){var n,o,m=[];if(e=s(e),!a().test(e)||!/\d+[\w\s\,]+/.test(e)||!/[\wçığöşü]$/.test(e))throw new Error('Invalid time: "'+e+'"');for(n=a();o=n.exec(e);)m.push(o[1]);for(var u=m.length;u--;)m[u]=i(m[u],r);return m=m.filter(t),0!=m.length?m.reduce(function(e,r){return e+r}):void 0}function t(e){return!!e}function s(e){return e.toLowerCase()}function i(e,r){var n,o,t;return n=e.split(m),o=n[1],t=n[2],r[t]?r[t](parseInt(o)):void 0}function a(){return/(\d+\s*[\wçığöşü]+)/g}var m=/(\d+)\s?([\wçığöşü]+)/;r.exports={all:o,one:i}},{}],3:[function(e,r,n){function o(e,r,n){var o=new RegExp("((?:[a-z]\\s)|^)("+(n||s).join("|")+")(?=\\s|$)","g"),i=e.replace(o,function(e,r,n){var o=s.indexOf(n);return r+(-1==o?n:o)});return o=new RegExp("((?:[a-z]\\s)|^)("+(r||t).join("|")+")(?=\\s|$)","g"),i=i.replace(o,function(e,r,n){return r+"1 "+n})}var t=["millisecond","second","minute","hour","day","week","month","year"],s=["zero","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve"];r.exports=o},{}],4:[function(e,r,n){function o(e){return e}function t(e,r){return function(n){return e(n)*r}}var s=t(o,1e3),i=t(s,60),a=t(i,60),m=t(a,24),u=t(m,7),c=t(m,31),l=t(c,12);r.exports={m:o,ms:o,millisec:o,millisecs:o,millisecond:o,milliseconds:o,s:s,sec:s,secs:s,seconds:s,second:s,m:i,min:i,mins:i,minute:i,minutes:i,h:a,hour:a,hours:a,d:m,day:m,days:m,w:u,week:u,weeks:u,mo:c,month:c,months:c,y:l,year:l,years:l}},{}],5:[function(e,r,n){function o(e){var r;return r=[arguments[arguments.length-1],t(e)],r.push.apply(r,Array.prototype.slice.call(arguments,1,arguments.length-1)),setInterval.apply(this,r)}var t=e("english-time-mirror");r.exports=o},{"english-time-mirror":1}],6:[function(e,r,n){function o(e){var r=c(e);return r=u(r),r.years>0&&l.years?t(r.years,l.yearFormat):r.months>0&&l.months?t(r.months,l.monthFormat):r.weeks>0&&l.weeks?t(r.weeks,l.weekFormat):r.days>0&&l.days?t(r.days,l.dayFormat):r.hours>0?t(r.hours,l.hourFormat):r.minutes>0?t(r.minutes,l.minuteFormat):r.seconds>0?l.seconds?t(r.seconds,l.secondFormat):t(1,l.minuteFormat):r.milliseconds>0?l.milliseconds?t(r.milliseconds,l.millisecondFormat):t(1,l.secondFormat):0}function t(e,r){var n="",o=l["long"]?1:0,t=l["long"]?" ":"";return e>1&&l["long"]&&l.pluralize&&(n="s"),e+t+r[o]+n}function s(e,r,n){n=n||.1;var o=Math.floor(e/r),t=e/r%1;return t>=.5+n?o++:.5-n>=t?o:o+.5}function i(e,r,n){n=n||6;var o=12;return r>=o+n?e++:o-n>=r?e:e+.5}function a(e,r,n){n=n||15;var o=30;return r>=o+n?e++:o-n>=r?e:e+.5}function m(e,r,n){n=n||15;var o=30;return r>=o+n?e++:o-n>=r?e:e+.5}function u(e){var r=24*e.days+e.hours,n=60*r+e.minutes;return e.years=0,e.months=0,e.weeks=0,e.days>=365&&(e.years=s(e.days,365,null)),e.days>=30&&(e.months=s(e.days,30,null)),e.days>=7&&(e.weeks=s(e.days,7,null)),e.days>0&&(e.days=i(e.days,e.hours,6)),e.hours>0&&(e.hours=a(r,e.minutes,15)),e.minutes>0&&(e.minutes=m(n,e.seconds,15)),e}var c=e("parse-ms"),l={"long":!1,pluralize:!0,days:!0,weeks:!0,months:!0,years:!0,seconds:!0,milliseconds:!0,yearFormat:["yr","year"],monthFormat:["mo","month"],weekFormat:["w","week"],hourFormat:["h","hour"],dayFormat:["d","day"],minuteFormat:["m","minute"],secondFormat:["s","second"],millisecondFormat:["ms","millisecond"]};r.exports=function(e,r){return r=r||{},l["long"]=!!r["long"],l.pluralize=r.pluralize!==!1,l.years=r.years!==!1,l.months=r.months!==!1,l.weeks=r.weeks!==!1,l.days=r.days!==!1,l.seconds=r.seconds!==!1,l.milliseconds=r.milliseconds!==!1,l.yearFormat=r.yearFormat?r.yearFormat:["yr","year"],l.monthFormat=r.monthFormat?r.monthFormat:["mo","month"],l.weekFormat=r.weekFormat?r.weekFormat:["w","week"],l.dayFormat=r.dayFormat?r.dayFormat:["d","day"],l.hourFormat=r.hourFormat?r.hourFormat:["h","hour"],l.minuteFormat=r.minuteFormat?r.minuteFormat:["m","minute"],l.secondFormat=r.secondFormat?r.secondFormat:["s","second"],l.millisecondFormat=r.millisecondFormat?r.millisecondFormat:["ms","millisecond"],o(e)}},{"parse-ms":7}],7:[function(e,r,n){"use strict";r.exports=function(e){if("number"!=typeof e)throw new TypeError("Expected a number");var r=e>0?Math.floor:Math.ceil;return{days:r(e/864e5),hours:r(e/36e5)%24,minutes:r(e/6e4)%60,seconds:r(e/1e3)%60,milliseconds:r(e)%1e3}}},{}],8:[function(e,r,n){"use strict";var o=(e("english-time-mirror"),e("every-time-mirror"),e("ms-time"),e("./_submitJob.js"),[]);$(document).ready(function(){$(".jobs-tbody").find("tr:gt(0)").remove();var e=io.connect(window.location.href);e.on("connect",function(){console.log("WebSockets connection established")}),e.on("displayQueue",function(e){_.isEqual(e,o)||(console.log("rendering new queue on page"),o=e,$(".jobs-tbody").render(e))});new THREE.Scene,new THREE.Persp;$(".slice-button").click(function(){e.emit("addJob",{job:$("#add-job-job"),name:$("#add-job-name"),eta:"eta"})})})},{"./_submitJob.js":9,"english-time-mirror":1,"every-time-mirror":5,"ms-time":6}],9:[function(e,r,n){"use strict"},{}]},{},[8]);
//# sourceMappingURL=data:application/json;base64,
